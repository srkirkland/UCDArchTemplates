<#@ template language="C#" HostSpecific="True" #>
<#
MvcTextTemplateHost mvcHost = (MvcTextTemplateHost)(Host);
string className = mvcHost.ControllerRootName;
string lowerClassName = className.ToLower();
string repository = "_" + lowerClassName + "Repository";
#>
using System;
using System.Web.Mvc;
using UCDArch.Core.PersistanceSupport;
using UCDArch.Web.Controller;
using UCDArchTemplates.Models;
using UCDArch.Web.Helpers;

namespace <#= mvcHost.Namespace #>
{
    /// <summary>
    /// Controller for the <#= className #> class
    /// </summary>
    public class <#= mvcHost.ControllerName #> : SuperController
    {
	    private readonly IRepository<<#= className #>> <#= repository #>;

        public <#= mvcHost.ControllerName #>(IRepository<<#= className #>> <#= lowerClassName #>Repository)
        {
            <#= repository #> = <#= lowerClassName #>Repository;
        }
    
        //
        // GET: <#= (!String.IsNullOrEmpty(mvcHost.AreaName)) ? ("/" + mvcHost.AreaName) : String.Empty #>/<#= mvcHost.ControllerRootName #>/
        public ActionResult Index()
        {
            var <#= lowerClassName #>List = <#= repository #>.GetAll();

            return View(<#= lowerClassName #>List);
        }

<#
if(mvcHost.AddActionMethods) {
#>
        //
        // GET: <#= (!String.IsNullOrEmpty(mvcHost.AreaName)) ? ("/" + mvcHost.AreaName) : String.Empty #>/<#= mvcHost.ControllerRootName #>/Details/5

        public ActionResult Details(int id)
        {
            return View();
        }

        //
        // GET: <#= (!String.IsNullOrEmpty(mvcHost.AreaName)) ? ("/" + mvcHost.AreaName) : String.Empty #>/<#= mvcHost.ControllerRootName #>/Create

        public ActionResult Create()
        {
            return View();
        } 

        //
        // POST: <#= (!String.IsNullOrEmpty(mvcHost.AreaName)) ? ("/" + mvcHost.AreaName) : String.Empty #>/<#= mvcHost.ControllerRootName #>/Create

        [HttpPost]
        public ActionResult Create(FormCollection collection)
        {
            try
            {
                // TODO: Add insert logic here

                return RedirectToAction("Index");
            }
            catch
            {
                return View();
            }
        }

        //
        // GET: <#= (!String.IsNullOrEmpty(mvcHost.AreaName)) ? ("/" + mvcHost.AreaName) : String.Empty #>/<#= mvcHost.ControllerRootName #>/Delete/5
 
        public ActionResult Delete(int id)
        {
            return View();
        }

        //
        // POST: <#= (!String.IsNullOrEmpty(mvcHost.AreaName)) ? ("/" + mvcHost.AreaName) : String.Empty #>/<#= mvcHost.ControllerRootName #>/Delete/5

        [HttpPost]
        public ActionResult Delete(int id, FormCollection collection)
        {
            try
            {
                // TODO: Add delete logic here
 
                return RedirectToAction("Index");
            }
            catch
            {
                return View();
            }
        }

        //
        // GET: <#= (!String.IsNullOrEmpty(mvcHost.AreaName)) ? ("/" + mvcHost.AreaName) : String.Empty #>/<#= mvcHost.ControllerRootName #>/Edit/5
 
        public ActionResult Edit(int id)
        {
            return View();
        }

        //
        // POST: <#= (!String.IsNullOrEmpty(mvcHost.AreaName)) ? ("/" + mvcHost.AreaName) : String.Empty #>/<#= mvcHost.ControllerRootName #>/Edit/5

        [HttpPost]
        public ActionResult Edit(int id, FormCollection collection)
        {
            try
            {
                // TODO: Add update logic here
 
                return RedirectToAction("Index");
            }
            catch
            {
                return View();
            }
        }
<#
}
#>
    }
}
